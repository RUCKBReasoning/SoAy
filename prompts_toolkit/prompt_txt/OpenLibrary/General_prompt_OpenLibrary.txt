Here are some tool functions you can use. Each function returns a dict or a list of dict.
-----
searchBook(book_info):
    book_list = [{'book_key': str, 'title': str, 'author_name': str, 'year': }, {...}]
    return book_list
---
getBook(book_key):
    info_dict = {'description': str, 'author_list': [{'author_key': str}, {...}], 'title': str, 'first_publish': str, 'subjects': list of str}
    return info_dict
---
searchAuthor(author_info):
    author_list = [{'author_key': str, 'name': str, 'alternate_names': list of str}, {...}]
    return author_list
---
getAuthorBasicInfo(author_key):
    info_dict = {'name': str, 'alternate_names': list of str, 'birth_date': str, 'work_count': int, 'top_work': str, 'top_subjects': list of str}
    return info_dict
---
getAuthorWorks(author_key, amount):
    work_list = [{'book_key': str, 'title': str, 'subjects': list of str}, {...}]
    return work_list
---
searchSubject(subject):
    work_list = [{'book_key': str, 'title': str}, {...}]
    return work_list
-----
The following example shows you how to use these tools in practical tasks. You are given a query. Break the query down into a combination of the python execution processes in order to solve it.
---
Query: 列出所有与Computer Science有关的书籍
Combination: searchBook
--
book_list = searchBook(book_info = 'Computer Science')
final_result = book_list
---
Query: 介绍一下Harry Potter这部书
Combination: searchBook->getBook
--
book_list = searchBook(book_info = 'Harry Potter')
target_book_key = book_list[0]['book_key']
target_book = getBook(book_key = target_book_key)
final_result = target_book['description']
---
Query: The Lord of the Rings这部书的作者是谁
Combination: searchBook->getBook->getAuthorBasicInfo
--
book_list = searchBook(book_info = 'The Lord of the Rings')
target_book_key = book_list[0]['book_key']
target_book = getBook(book_key = target_book_key)
target_author_key = target_book['author_list'][0]['author_key']
author = getAuthorBasicInfo(author_key = target_author_key)
final_result = author['name']
---
Query: A Game of Thrones这部书是在哪一年出版的
Combination: searchBook->getBook
--
book_list = searchBook(book_info = 'A Game of Thrones')
target_book_key = book_list[0]['book_key']
target_book = getBook(book_key = target_book_key)
final_result = target_book['first_publish']
---
Query: Flatland是什么类型的书
Combination: searchBook->getBook
--
book_list = searchBook(book_info = 'Flatland')
target_book_key = book_list[0]['book_key']
target_book = getBook(book_key = target_book_key)
final_result = target_book['subjects']
---
Query: J. K. Rowling还用过哪些笔名
Combination: searchAuthor
--
author_list = searchAuthor(author_info = 'J. K. Rowling')
target_author = author_list[0]
final_result = target_author['alternate_names']
---
Query: 作家R. R. Martin是哪一年出生的
Combination: searchAuthor->getAuthorBasicInfo
--
author_list = searchAuthor(author_info = 'R. R. Martin')
target_author_key = author_list[0]['author_key']
target_author = getAuthorBasicInfo(author_key = target_author_key)
final_result = target_author['birth_date']
---
Query: 作家Mazo de la Roche一生大约创作了多少部作品
Combination: searchAuthor->getAuthorBasicInfo
--
author_list = searchAuthor(author_info = 'Mazo de la Roche')
target_author_key = author_list[0]['author_key']
target_author = getAuthorBasicInfo(author_key = target_author_key)
final_result = target_author['work_count']
---
Query: 作家J. K. Rowling有哪些出名的作品
Combination: searchAuthor->getAuthorWorks
--
author_list = searchAuthor(author_info = 'J. K. Rowling')
target_author_key = author_list[0]['author_key']
work_list = getAuthorWorks(author_key = target_author_key, amount = 5)
final_result = [work['title'] for work in work_list]
---
Query: 介绍一部Mazo de la Roche创作的作品
Combination: searchAuthor->getAuthorWorks->getBook
--
author_list = searchAuthor(author_info = 'Mazo de la Roche')
target_author_key = author_list[0]['author_key']
work_list = getAuthorWorks(author_key = target_author_key, amount = 1)
target_work_key = work_list[0]['book_key']
target_work = getBook(book_key = target_work_key)
final_result = target_work
---
Query: 列举一些科幻题材的代表作
Combination: searchSubject
--
work_list = searchSubject(subject = 'science fiction')
final_result = work_list
---
Query: 简要介绍一本自传类别的书籍
Combination: searchSubject->getBook
--
work_list = searchSubject(subject = 'autobiography')
target_work_key = work_list[0]['book_key']
target_work = getBook(book_key = target_work_key)
final_result = target_work
---
Query: 